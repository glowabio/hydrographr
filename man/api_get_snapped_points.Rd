% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_get_snapped_points.R
\name{api_get_snapped_points}
\alias{api_get_snapped_points}
\title{Snap Site Coordinates to the River Network}
\usage{
api_get_snapped_points(
  csv_url,
  colname_lat = "latitude",
  colname_lon = "longitude",
  colname_site_id = "site_id",
  process_url = NULL
)
}
\arguments{
\item{csv_url}{A URL to a CSV file hosted online. The CSV must contain latitude, longitude, and site ID columns.}

\item{colname_lat}{Name of the latitude column in the CSV. Default is "latitude".}

\item{colname_lon}{Name of the longitude column in the CSV. Default is "longitude".}

\item{colname_site_id}{Name of the site ID column in the CSV. Default is "site_id".}

\item{process_url}{URL of the pygeoapi process called by the function.
#'   Must be specified explicitly, e.g.,
  `"http://localhost:5000/processes/get-snapped-points/execution"`.}
}
\value{
A list with two elements:
\describe{
  \item{data}{A `data.frame` containing the snapped coordinates and additional information.}
  \item{href}{A `character` string with the URL of the output CSV.}
}
}
\description{
Sends a request to the GeoFRESH API to snap a set of site coordinates to the nearest flowline
in the river network. Returns both the snapped and original coordinates, along with a link
to download the results or to use it in another function of the family ocgapi.
}
\examples{
\dontrun{
# Example usage
url <- "https://example.com/sites.csv"
snapped_df <- api_get_snapped_points(csv_url = url,
 colname_lat = "latitude",
 colname_lon = "longitude",
 colname_site_id = "site_id",
process_url = "http://localhost:5000/processes/get-snapped-points/execution")


#' head(result$data)
cat("Download link:", result$href)

}




}
\seealso{
Other ocgapi: 
\code{\link{api_get_env90m_data}()},
\code{\link{api_get_local_ids}()},
\code{\link{api_get_upstream_subcids}()}
}
\concept{ocgapi}
