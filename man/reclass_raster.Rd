% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reclass_raster.R
\name{reclass_raster}
\alias{reclass_raster}
\title{Reclassify an integer raster layer}
\usage{
reclass_raster(
  data,
  rast_val,
  new_val = FALSE,
  raster_layer,
  recl_layer,
  reclass_value = FALSE,
  no_data = -9999,
  type = "Int32",
  compression = "low",
  bigtiff = TRUE,
  read = FALSE,
  quiet = TRUE
)
}
\arguments{
\item{data}{a data.frame or data.table with the present and new raster
values.}

\item{rast_val}{character. The name of the column with the present
raster values.}

\item{new_val}{character. The name of the column with the new raster values.}

\item{raster_layer}{Full path to the input raster .tif layer.}

\item{recl_layer}{character. Full path of the output .tif layer
of the reclassified raster file.}

\item{reclass_value}{integer. Value to reclassify the entire raster.
Default is FALSE. Note in case reclass_value is provided, new_val parameter
needs to be empty, otherwise the raster is reclassified based on the new_val column.}

\item{no_data}{numeric. The no_data value of the new .tif layer.
Default is -9999.}

\item{type}{character. Data type; Options are Byte, Int16, UInt16, Int32,
UInt32,CInt16, CInt32. Default is Int32.}

\item{read}{logical. If TRUE, then the reclassified raster .tif layer
gets read into R as a SpatRaster (terra object).
If FALSE, the layer is only stored on disk. Default is TRUE.}

\item{compress}{Compression type: DEFLATE or LZW. Default is DEFLATE.}
}
\description{
Reclassifies an integer raster .tif layer using the r.reclass
function of GRASS GIS. To reclassify the raster layer the present raster
values and the new raster values have to be defined.

If the input raster layer has floating point values, you should multiply
the input data by some factor (e.g. 1000) to achieve integer values,
otherwise the GRASS GIS r.reclass will round the raster values down to
the next integer which is not always desired.
}
\examples{
# Download test data into the temporary R folder
# or define a different directory
my_directory <- tempdir()
download_test_data(my_directory)

# Read the stream order for each sub-catchment as a data.table
# my_dt <- read_geopackage(paste0(my_directory, "/order_vect_59.gpkg"),
type = "net", as_dt = T)


# Select the stream segment ID and and the Strahler stream order
str_ord <- my_dt[,c("stream", "strahler")]

# Define input and output raster layer
stream_raster <- paste0(my_directory,
                        "/hydrography90m_test_data/stream_1264942.tif")

recl_raster <- paste0(my_directory,
                      "/hydrography90m_test_data/reclassified_raster.tif")

# Reclassify the stream network to obtain the Strahler stream order raster
str_ord_rast <- reclass_raster(data = str_ord,
                               rast_val = "stream",
                               new_val = "strahler",
                               raster_layer = stream_raster,
                               recl_layer = recl_raster)

str_ord_rast <- reclass_raster(data = str_ord$stream,
                               reclass_value = 1,
                               rast_val = "stream",
                               raster_layer = stream_raster,
                               recl_layer = recl_raster)
}
\references{
https://grass.osgeo.org/grass82/manuals/r.reclass.html
}
\author{
Maria M. Ãœblacker, Thomas Tomiczek
}
