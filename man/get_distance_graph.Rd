% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_distance_graph.R
\name{get_distance_graph}
\alias{get_distance_graph}
\title{Get the distance in meters between stream segments along a network graph}
\usage{
get_distance_graph(
  g,
  subc_id = subc_id,
  variable = "length",
  distance_m = TRUE,
  max_size = 1500
)
}
\arguments{
\item{g}{igraph object.}

\item{subc_id}{numeric vector of a single or multiple IDs,
e.g (c(ID1, ID2, ID3, ...). The sub-catchment (equivalent to stream segment)
IDs for which to delineate the upstream drainage area. Note that you can
browse the entire network online at
\url{https://geo.igb-berlin.de/maps/351/view} and to the left hand side,
select the "Stream segment ID" layer and click on the map to get the ID. Optional.}

\item{variable}{character. Specify the attribute / column name in the graph
object that should be cumulated along the network path. Default is "length"
to be used with the Hydrography90m dataset.  Not needed when
using "distance_m = FALSE".}

\item{distance_m}{logical. If TRUE, the length (in meters) of each network
segment along the path will be cumulated and the total length between all
pairs will be reported in a matrix. If false, only the number of segments
that are traversed through will be reported in the output matrix. Default
is TRUE.}

\item{max_size}{numeric. Specifies the maximum size of the data passed to the
parallel back-end in MB. Default is 1500 (1.5 GB). Consider a higher value
for large study areas (more than one 20°x20° tile). Optional.}
}
\value{
A graph or data.table that reports all subc_ids.
In case of multiple input segments, the results are stored in a list.
}
\description{
Given a set of input sub-cacthments IDs, the function will
calculate the network distance in meters between all input pairs.
Alternatively, only the number of stream segments (sub-cacthments) along the
paths are reported. Note that the stream segment and sub-catchment
IDs are identical, and for consistency, we use the term "subc_id".

See the code under "Note" that explains how to use standard igraph functions
to obtain the actual stream segment IDs along the path. The
function \code{\link{read_geopackage()}} can be used to create the input
network graph, and the function \code{\link{get_catchment_graph()}} can be
used to subset a network graph.
}
\examples{
# Download test data into the temporary R folder
# or define a different directory
my_directory <- tempdir()
download_test_data(my_directory)

# Load stream network as a graph
my_graph <- read_geopackage(gpkg = paste0(my_directory,
                                         "/hydrography90m_test_data",
                                         "/order_vect_59.gpkg"),
                           import_as = "graph")

# Assume we have some point data in the following sub-catchment IDs:
subc_id <- c("513863746", "513866851", "513867238")

# ... if you have some point data, use the extract_ids() function:
# (the coordinates correspond to the same three subc_ids)
my_points <- data.frame(longitude = c(8.885996642821286,
                                      8.873352770456831,
                                      8.898060225276105),
                       latitude = c(42.26533822791161,
                            	       42.26307509726402,
                            	       42.25513157316764),
                       occurrence_id = c(1, 2, 3))

# Define the path of the subcatchment raster
subc_raster <- paste0(my_directory,
                      "/hydrography90m_test_data/subcatchment_1264942.tif")


# Extract the subcatchment IDs for the points:
my_points_subc_id <- extract_ids(data = my_points,
                                 lon = "longitude",
                                 lat = "latitude",
                                 id = "occurrence_id",
                                 subc_layer = subc_raster)


# Get a vector of the subcatchment IDs:
subc_id <- my_points_subc_id$subcatchment_id

# Get the network distance (in meters) between all input pairs:
subc_distances <- get_distance_graph(my_graph,
                                     subc_id = subc_id,
                                     variable = "length",
                                     distance_m = TRUE)
subc_distances

# Get the number of stream segments that are along the network path:
number_segments <- get_distance_graph(my_graph,
                                     subc_id = subc_id,
                                     variable = "length",
                                     distance_m = FALSE)
number_segments
}
\references{
Csardi G, Nepusz T: The igraph software package for complex network research,
InterJournal, Complex Systems 1695. 2006. \url{https://igraph.org}

#' @seealso
\itemize{
\item \code{\link{read_geopackage()}} to create a network graph.
\item \code{\link{get_catchment_graph()}} to subset a network graph.
}
}
\author{
Sami Domisch
}
