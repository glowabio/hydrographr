% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_get_env90m_data.R
\name{api_get_env90m_data}
\alias{api_get_env90m_data}
\title{Retrieve 90m-Resolution Environmental Variables for Subcatchments}
\usage{
api_get_env90m_data(
  subc_ids,
  variables,
  comment = NULL,
  chunk_size = 3000,
  process_url = NULL
)
}
\arguments{
\item{subc_ids}{A numeric vector of unique subcatchment IDs.}

\item{variables}{A character vector of variable names to retrieve
(e.g., `"bio5"`, `"slope_grad_dw_cel"`).}

\item{comment}{Optional character string to include in the request
metadata (can help with tracing requests on the server).}

\item{chunk_size}{Integer. Maximum number of subcatchments to send per request
(default is 3000).}

\item{process_url}{Character. The full URL of the pygeoapi process to call.
Must be specified explicitly, e.g.,
`"http://localhost:5000/processes/get-env90m/execution"`.}
}
\value{
A data frame with one row per subcatchment and columns for each
  requested environmental variable, plus a `subc_id` column.

A data frame containing zonal statistics (mean,min,max) of environmental variables
per subcatchment. Each row corresponds to one subcatchment.
}
\description{
This function queries the GeoFRESH API to retrieve
environmental zonal statistics of the variables included in the
Environment90m dataset (Marquez et al., 2025, in prep.).
}
\examples{
\dontrun{
subc_ids <- c(560230105, 560149764, 560251298)
vars <- vars <- c("bio1", "flow", "cti")
env_df <- api_get_env90m_data(subc_ids = subc_ids, variables = vars)
}

}
\seealso{
Other ocgapi: 
\code{\link{api_get_local_ids}()},
\code{\link{api_get_snapped_points}()},
\code{\link{api_get_upstream_subcids}()}
}
\concept{ocgapi}
