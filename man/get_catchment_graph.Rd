% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_catchment_graph.R
\name{get_catchment_graph}
\alias{get_catchment_graph}
\title{Get catchment from graph}
\usage{
get_catchment_graph(
  g,
  subc_id = NULL,
  outlet = FALSE,
  mode = NULL,
  as_graph = FALSE,
  n_cores = 1,
  maxsize = 1500
)
}
\arguments{
\item{g}{A directed graph (igraph object).}

\item{subc_id}{Optional.
The sub-catchments (equivalent to stream segment) IDs for which
to delineate the upstream drainage area. Can be a single ID or a vector of
multiple IDs (c(ID1, ID2, ID3, ...).
If empty, then outlets will be used as sub-catchment IDs
(with outlet=TRUE). Note that you can browse the entire network online at
https://geo.igb-berlin.de/maps/351/view and to left hand side, select the
"Stream segment ID"  layer and click on the map to get the ID.}

\item{outlet}{Logical. If TRUE, then the outlets of the given network graph
will be used as additional input subc_ids.
Outlets will be identified internally as those stream segments that do not
have any downstream connected segment.}

\item{mode}{Can be either "in", "out" or "all". "in" will delineate
the upstream catchment, "out" delineates the downstream catchment
(all segments that are reachable from the given input segment), and
"all" does both.}

\item{as_graph}{Logical. If TRUE then the output will be a new graph
or a list of new graphs with the original attributes,
If FALSE (the default), then the output will be a new data.table,
or a list of data.tables. List objects are named after the subc_ids.}

\item{n_cores}{Optional. Specify the number of CPUs for internal
parallelization in the case of multiple stream segments / outlets. Defaults
to 1. Setting a higher number is might be slower in the end, as the data has
to be provided to each CPU (worker) which can take time.}

\item{maxsize}{Optional. Specify the maximum size of the data passed to the
parallel backend in MB. Defaults to 1500 (1.5 GB). Consider a higher value
for large study areas (more than one 20°x20° tile).}
}
\value{
A graph or datatable that reports all subc_ids.
In case of multiple input segments, the results are stored in a list.
}
\description{
Subset the network graph by extracting the upstream, downstream or entire
catchment, for one or multiple stream segments. The function will return
either one or more data.tables or graph objects for each input stream
segment. Note that the stream segment and sub-catchment IDs are identical,
and for consistency, we use the term "subc_id".
}
\details{
By switching the mode to either "in", "out" or "all", only the upstream,
downstream or all connected segments will be returned.
}
\examples{
library(hydrographr)

# Download test data into temporary R folder
my_directory <- tempdir()
download_test_data(my_directory)

# Load stream network as a graph
g <- read_geopackage(paste0(my_directory, "/order_vect_59.gpkg"),
                            type = "net", as_graph = TRUE)

# Pick a random subc_id
subc_id = "513855877"
# Get the upstream catchment as a graph
g_up <- get_catchment_graph(g, subc_id = subc_id, mode = "in",
                            outlet = FALSE, as_graph = TRUE, n_cores =1)

# Get the downstream segments as a data.table,
g_down <- get_catchment_graph(g, subc_id = subc_id, mode = "out",
                              outlet = FALSE, as_graph = FALSE, n_cores = 1)

# Get the catchments of all outlets in the study area as a graph
g_all <- get_catchment_graph(g, mode = "in", outlet = TRUE, as_graph = TRUE,
                             n_cores=1)

}
\author{
Sami Domisch
}
